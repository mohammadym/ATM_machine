////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Check_Pass.vf
// /___/   /\     Timestamp : 01/26/2020 21:46:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family xc9500xl -verilog "C:/Users/Amir Esmaeili/Desktop/Simulation_Project/Simulation_Project/Check_Pass.vf" -w "C:/Users/Amir Esmaeili/Desktop/Simulation_Project/Simulation_Project/Check_Pass.sch"
//Design Name: Check_Pass
//Device: xc9500xl
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module COMP2_MXILINX_Check_Pass(A0, 
                                A1, 
                                B0, 
                                B1, 
                                EQ);

    input A0;
    input A1;
    input B0;
    input B1;
   output EQ;
   
   wire AB0;
   wire AB1;
   
   XNOR2  I_36_30 (.I0(B1), 
                  .I1(A1), 
                  .O(AB1));
   XNOR2  I_36_31 (.I0(B0), 
                  .I1(A0), 
                  .O(AB0));
   AND2  I_36_35 (.I0(AB1), 
                 .I1(AB0), 
                 .O(EQ));
endmodule
`timescale 1ns / 1ps

module COMP4_MXILINX_Check_Pass(A0, 
                                A1, 
                                A2, 
                                A3, 
                                B0, 
                                B1, 
                                B2, 
                                B3, 
                                EQ);

    input A0;
    input A1;
    input A2;
    input A3;
    input B0;
    input B1;
    input B2;
    input B3;
   output EQ;
   
   wire AB0;
   wire AB1;
   wire AB2;
   wire AB3;
   
   AND4  I_36_32 (.I0(AB3), 
                 .I1(AB2), 
                 .I2(AB1), 
                 .I3(AB0), 
                 .O(EQ));
   XNOR2  I_36_33 (.I0(B2), 
                  .I1(A2), 
                  .O(AB2));
   XNOR2  I_36_34 (.I0(B3), 
                  .I1(A3), 
                  .O(AB3));
   XNOR2  I_36_42 (.I0(B1), 
                  .I1(A1), 
                  .O(AB1));
   XNOR2  I_36_43 (.I0(B0), 
                  .I1(A0), 
                  .O(AB0));
endmodule
`timescale 1ns / 1ps

module FD_MXILINX_Check_Pass(C, 
                             D, 
                             Q);

   parameter INIT = 1'b0;
   
    input C;
    input D;
   output Q;
   
   wire XLXN_4;
   
   GND  I_36_43 (.G(XLXN_4));
   FDCP  U0 (.C(C), 
            .CLR(XLXN_4), 
            .D(D), 
            .PRE(XLXN_4), 
            .Q(Q));
endmodule
`timescale 1ns / 1ps

module Memory_MUSER_Check_Pass(clock, 
                               D0, 
                               D1, 
                               D2, 
                               D3, 
                               D4, 
                               D5, 
                               D6, 
                               D7, 
                               D8, 
                               D9, 
                               Q0, 
                               Q1, 
                               Q2, 
                               Q3, 
                               Q4, 
                               Q5, 
                               Q6, 
                               Q7, 
                               Q8, 
                               Q9);

    input clock;
    input D0;
    input D1;
    input D2;
    input D3;
    input D4;
    input D5;
    input D6;
    input D7;
    input D8;
    input D9;
   output Q0;
   output Q1;
   output Q2;
   output Q3;
   output Q4;
   output Q5;
   output Q6;
   output Q7;
   output Q8;
   output Q9;
   
   
   (* HU_SET = "XLXI_1_0" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_1 (.C(clock), 
                                 .D(D1), 
                                 .Q(Q1));
   (* HU_SET = "XLXI_2_1" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_2 (.C(clock), 
                                 .D(D2), 
                                 .Q(Q2));
   (* HU_SET = "XLXI_3_2" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_3 (.C(clock), 
                                 .D(D3), 
                                 .Q(Q3));
   (* HU_SET = "XLXI_4_3" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_4 (.C(clock), 
                                 .D(D4), 
                                 .Q(Q4));
   (* HU_SET = "XLXI_5_4" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_5 (.C(clock), 
                                 .D(D5), 
                                 .Q(Q5));
   (* HU_SET = "XLXI_6_5" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_6 (.C(clock), 
                                 .D(D6), 
                                 .Q(Q6));
   (* HU_SET = "XLXI_7_6" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_7 (.C(clock), 
                                 .D(D7), 
                                 .Q(Q7));
   (* HU_SET = "XLXI_8_7" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_8 (.C(clock), 
                                 .D(D8), 
                                 .Q(Q8));
   (* HU_SET = "XLXI_9_8" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_9 (.C(clock), 
                                 .D(D9), 
                                 .Q(Q9));
   (* HU_SET = "XLXI_10_9" *) 
   FD_MXILINX_Check_Pass #( .INIT(1'b0) ) XLXI_10 (.C(clock), 
                                  .D(D0), 
                                  .Q(Q0));
endmodule
`timescale 1ns / 1ps

module Check_Pass(clock, 
                  d0, 
                  d1, 
                  d2, 
                  d3, 
                  d4, 
                  d5, 
                  d6, 
                  d7, 
                  d8, 
                  d9, 
                  in0, 
                  in1, 
                  in2, 
                  in3, 
                  in4, 
                  in5, 
                  in6, 
                  in7, 
                  in8, 
                  in9, 
                  Check);

    input clock;
    input d0;
    input d1;
    input d2;
    input d3;
    input d4;
    input d5;
    input d6;
    input d7;
    input d8;
    input d9;
    input in0;
    input in1;
    input in2;
    input in3;
    input in4;
    input in5;
    input in6;
    input in7;
    input in8;
    input in9;
   output Check;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_33;
   wire XLXN_34;
   wire XLXN_35;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   
   Memory_MUSER_Check_Pass  XLXI_1 (.clock(clock), 
                                   .D0(d0), 
                                   .D1(d1), 
                                   .D2(d2), 
                                   .D3(d3), 
                                   .D4(d4), 
                                   .D5(d5), 
                                   .D6(d6), 
                                   .D7(d7), 
                                   .D8(d8), 
                                   .D9(d9), 
                                   .Q0(XLXN_1), 
                                   .Q1(XLXN_2), 
                                   .Q2(XLXN_3), 
                                   .Q3(XLXN_4), 
                                   .Q4(XLXN_5), 
                                   .Q5(XLXN_39), 
                                   .Q6(XLXN_40), 
                                   .Q7(XLXN_41), 
                                   .Q8(XLXN_42), 
                                   .Q9(XLXN_43));
   (* HU_SET = "XLXI_3_10" *) 
   COMP4_MXILINX_Check_Pass  XLXI_3 (.A0(XLXN_1), 
                                    .A1(XLXN_2), 
                                    .A2(XLXN_3), 
                                    .A3(XLXN_4), 
                                    .B0(in0), 
                                    .B1(in1), 
                                    .B2(in2), 
                                    .B3(in3), 
                                    .EQ(XLXN_33));
   (* HU_SET = "XLXI_4_11" *) 
   COMP4_MXILINX_Check_Pass  XLXI_4 (.A0(XLXN_5), 
                                    .A1(XLXN_39), 
                                    .A2(XLXN_40), 
                                    .A3(XLXN_41), 
                                    .B0(in4), 
                                    .B1(in5), 
                                    .B2(in6), 
                                    .B3(in7), 
                                    .EQ(XLXN_34));
   (* HU_SET = "XLXI_5_12" *) 
   COMP2_MXILINX_Check_Pass  XLXI_5 (.A0(XLXN_42), 
                                    .A1(XLXN_43), 
                                    .B0(in8), 
                                    .B1(in9), 
                                    .EQ(XLXN_35));
   AND3  XLXI_6 (.I0(XLXN_35), 
                .I1(XLXN_34), 
                .I2(XLXN_33), 
                .O(Check));
endmodule
